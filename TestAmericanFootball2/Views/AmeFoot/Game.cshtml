@model TestAmericanFootball2.ViewModels.AmeFootViiewModel

@{
    ViewData["Title"] = "Index";

    bool shortDistance = int.Parse(Model.RemainYards) <= 24;

}

<h2>AmeFoot</h2>
<form asp-controller="AmeFoot" asp-action="Game">
    <p>
        <input type="submit" name="method" value="初期化" class="btn btn-default" />
        <a asp-action="Index">別のユーザーで始める</a>
    </p>
    <table class="table">
        <tr>
            <td>
                オフェンス
            </td>
            <td>
                @if (Model.CurrentPlayer == 1)
                {
                    @Html.DisplayFor(model => model.Player1Id)
                }
                else
                {
                    @Html.DisplayFor(model => model.Player2Id)
                }
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentQuarter)
            </td>
            <td>
                @Html.DisplayFor(model => model.CurrentQuarter) / @Html.DisplayFor(model => model.TotalQuarter)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainTime)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainTime)
            </td>
        </tr>
        <tr>
            <td>
                スコア（@Model.Player1Id - @Model.Player2Id）
            </td>
            <td>
                @Html.DisplayFor(model => model.P1Score)
                -
                @Html.DisplayFor(model => model.P2Score)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Remain1stDownYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.Remain1stDownYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainOffenceNum)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainOffenceNum)回
            </td>
        </tr>
    </table>

    <p>
        @if (Model.RemainSeconds > 0)
        {
            @if (Model.Player2Id == Const.COM_NAME_DISPLAY && Model.CurrentPlayer == 2)
            {
                <input type="submit" name="method" value="コンピューター" class="btn btn-danger" />
                <span class="tool-tip"
                      data-toggle="tooltip"
                      data-placement="top"
                      data-html="true"
                      title="コンピューターの番が終わるまで<br>スキップします。">
                    <input type="submit" name="method" value="コンピューター(スキップ)" class="btn btn-danger" />
                </span>
            }
            else
            {

                @if (Model.RemainOffenceNum >= 2)
                {
                    <input type="submit" name="method" value="ラン" class="btn btn-default" />
                    <input type="submit" name="method" value="ショートパス" class="btn btn-default" />
                    <input type="submit" name="method" value="ロングパス" class="btn btn-default" />
                }
                else
                {
                    @if (shortDistance)
                    {
                        <input type="submit" name="method" value="ラン" class="btn btn-default" />
                        <input type="submit" name="method" value="ショートパス" class="btn btn-default" />
                        <input type="submit" name="method" value="キック" class="btn btn-info" />
                    }
                    else
                    {
                        <input type="submit" name="method" value="ラン" class="btn btn-default" />
                        <input type="submit" name="method" value="ロングパス" class="btn btn-default" />
                        <input type="submit" name="method" value="パント" class="btn btn-info" />
                    }
                }
            }
        }
    </p>
    <p>
        @*<input type="button" id="test1" value="test2" class="btn btn-info" onclick="test_onclick()" />*@
        ZIP:<input type="text" id="zip" />
        アドレス:<input type="text" id="address" />
        <input type="button" id="test1" value="test1" class="btn btn-info" />
        <input type="button" id="test2" value="test2" class="btn btn-info" />
    </p>

    <div>
        @Html.DisplayFor(model => model.Result)
    </div>

    @Html.HiddenFor(model => model.Player1Id)
    @Html.HiddenFor(model => model.Player2Id)
</form>e

@section Scripts{
<script src="/js/game.js"></script>
<script>
    $('#test1').on('click', function () {
        $.getJSON('http://zipcloud.ibsnet.co.jp/api/search?callback=?',
            {
                zipcode: $('#zip').val()
            })
            .done(function (data) {
                console.debug(data)

                if (data.results) {
                    var result = data.results[0];
                    $('#address').val(result.address1 + result.address2 + result.address3);
                } else {
                    $('#address').val('該当する住所が存在しません。');
                }
            });
    });

    $('#test2').on('click', function () {
        $.getJSON('api',
            {
                //zipcode: $('#zip').val()
            })
            .then(data => {
                console.debug(data)

                if (data) {
                    $('#address').val(data[0] + data[1]);
                } else {
                    $('#address').val('該当する住所が存在しません。');
                }
            });
    });

/*            // 1.phpファイルへのアクセス
            $.get('get.php',
                {
                    query: $('#keyword').val()
                }
            )
                // 2検索成功時にはページに結果を反映
                .done(function (data) {
                    // 結果リストをクリア
                    $('#result').empty();
                    // <Question>要素（個々の質問情報）を順番に処理
                    $('Question', data).each(function () {
                        // <Url>（詳細ページ）、<Content>（質問本文）をもとにリンクリストを生成
                        $('#result').append(
                            $('<li></li>').append(
                                $('<a></a>')
                                    .attr({
                                        href: $('Url', this).text(),
                                        target: '_blank'
                                    })
                                    .text($('Content', this).text().substring(0, 255) + '...')
                            )
                        );
                    });
                })
                // 3検索失敗時には、その旨をダイアログ表示
                .fail(function () {
                    window.alert('正しい結果を得られませんでした。');
                });
        });
    */
</script>
}