@model TestAmericanFootball2.ViewModels.AmeFootViiewModel

@{
    ViewData["Title"] = "Index";

    bool kickDisabled = int.Parse(Model.RemainYards) >= 40;

}

<h2>AmeFoot</h2>
<form asp-controller="AmeFoot" asp-action="Game">
    <p>
        <input type="submit" name="method" value="初期化" class="btn btn-default" />
        <a asp-action="Index">別のユーザーで始める</a>
    </p>
    <table class="table">
        <tr>
            <td>
                オフェンス
            </td>
            <td>
                @if (Model.CurrentPlayer == 1)
                {
                    @Html.DisplayFor(model => model.Player1Id)
                }
                else
                {
                    @Html.DisplayFor(model => model.Player2Id)
                }
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentQuarter)
            </td>
            <td>
                @Html.DisplayFor(model => model.CurrentQuarter) / @Html.DisplayFor(model => model.TotalQuarter)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainTime)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainTime)
            </td>
        </tr>
        <tr>
            <td>
                スコア（@Model.Player1Id - @Model.Player2Id）
            </td>
            <td>
                @Html.DisplayFor(model => model.P1Score)
                -
                @Html.DisplayFor(model => model.P2Score)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Remain1stDownYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.Remain1stDownYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainOffenceNum)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainOffenceNum)回
            </td>
        </tr>
    </table>

    <p>
        @if (Model.RemainSeconds > 0)
        {
            @if (Model.RemainOffenceNum > 1)
            {
                <input type="submit" name="method" value="ラン" class="btn btn-default" />
                <input type="submit" name="method" value="ショートパス" class="btn btn-default" />
                <input type="submit" name="method" value="ロングパス" class="btn btn-default" />
            }
            else
            {
                <input type="submit" name="method" value="パント" class="btn btn-info" />
                @if (kickDisabled)
                {
                    <span class="tool-tip"
                          data-toggle="tooltip"
                          data-placement="top"
                          data-html="true"
                          title="残り40ヤード以上では<br>使用できません">
                        <input type="submit" name="method" value="キック" class="btn btn-info" disabled="disabled" />
                    </span>
                }
                else
                {
                    <input type="submit" name="method" value="キック" class="btn btn-info" />
                }

                <input type="submit" name="method" value="ギャンブル" class="btn btn-warning" />
            }
        }
    </p>

    <div>
        @Html.DisplayFor(model => model.Result)
    </div>

    @Html.HiddenFor(model => model.Player1Id)
    @Html.HiddenFor(model => model.Player2Id)
</form>