@model TestAmericanFootball2.ViewModels.AmeFootViiewModel

@{
    ViewData["Title"] = "Index";

    bool shortDistance = int.Parse(Model.RemainYards) <= 24;
    bool isCpu = Model.Player2Id == Const.COM_NAME_DISPLAY && Model.CurrentPlayer == 2;
}

<h2>AmeFoot</h2>
<form asp-controller="AmeFoot" asp-action="Game" id="form">
    <p>
        <input type="submit" name="method" value="初期化" class="btn btn-default" />
        <a asp-action="Index">別のユーザーで始める</a>
    </p>
    <table class="table">
        <tr>
            <td>
                オフェンス
            </td>
            <td>
                @if (Model.CurrentPlayer == 1)
                {
                    @Html.DisplayFor(model => model.Player1Id)
                }
                else
                {
                    @Html.DisplayFor(model => model.Player2Id)
                }
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.CurrentQuarter)
            </td>
            <td>
                @Html.DisplayFor(model => model.CurrentQuarter) / @Html.DisplayFor(model => model.TotalQuarter)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainTime)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainTime)
            </td>
        </tr>
        <tr>
            <td>
                スコア（@Model.Player1Id - @Model.Player2Id）
            </td>
            <td>
                @Html.DisplayFor(model => model.P1Score)
                -
                @Html.DisplayFor(model => model.P2Score)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Remain1stDownYards)
            </td>
            <td>
                @Html.DisplayFor(model => model.Remain1stDownYards)ヤード
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.RemainOffenceNum)
            </td>
            <td>
                @Html.DisplayFor(model => model.RemainOffenceNum)回
            </td>
        </tr>
    </table>

    <p>
        @if (Model.RemainSeconds > 0)
        {
            @if (isCpu)
            {
                @*<input type="submit" name="method" id="method_com" value="コンピューター" class="btn btn-danger" />
                <span class="tool-tip"
                      data-toggle="tooltip"
                      data-placement="top"
                      data-html="true"
                      title="コンピューターの番が終わるまで<br>スキップします。"
                      style="display:none">
                    <input type="submit" name="method" value="コンピューター(スキップ)" class="btn btn-danger" />
                </span>
                @Html.CheckBoxFor(model => model.IsAIAuto)
                @Html.LabelFor(model => model.IsAIAuto)*@
                <input type="submit" name="method" value="ショートディフェンス" class="btn btn-danger" />
                <input type="submit" name="method" value="ミドルディフェンス" class="btn btn-danger" />
                <input type="submit" name="method" value="ロングディフェンス" class="btn btn-danger" />

            }
            else
            {

                @if (Model.RemainOffenceNum >= 2)
                {
                    <input type="submit" name="method" value="ラン" class="btn btn-default" />
                    <input type="submit" name="method" value="ショートパス" class="btn btn-default" />
                    <input type="submit" name="method" value="ロングパス" class="btn btn-default" />
                }
                else
                {
                    @if (shortDistance)
                    {
                        <input type="submit" name="method" value="ラン" class="btn btn-default" />
                        <input type="submit" name="method" value="ショートパス" class="btn btn-default" />
                        <input type="submit" name="method" value="キック" class="btn btn-info" />
                    }
                    else
                    {
                        <input type="submit" name="method" value="ラン" class="btn btn-default" />
                        <input type="submit" name="method" value="ロングパス" class="btn btn-default" />
                        <input type="submit" name="method" value="パント" class="btn btn-info" />
                    }
                }
            }
        }
    </p>
    @if (false) {
        <p>
            @*<input type="button" id="test1" value="test2" class="btn btn-info" onclick="test_onclick()" />*@
            ZIP:<input type="text" id="zip" name="zip" />
            アドレス:<input type="text" id="address" name="address" />
            <input type="button" id="test1" value="test1" class="btn btn-info" />
            <input type="button" id="test2" value="test2" class="btn btn-info" />
            <input type="button" id="test3" value="test3" class="btn btn-info" />
        </p>
    }

    <div>
        @Html.DisplayFor(model => model.Result)
    </div>

    @Html.HiddenFor(model => model.Player1Id)
    @Html.HiddenFor(model => model.Player2Id)
</form>

@section Scripts{
    <script src="/js/game.js"></script>
    <script>
        $('#test1').on('click', function () {
            $.getJSON('http://zipcloud.ibsnet.co.jp/api/search?callback=?',
                {
                    zipcode: $('#zip').val()
                })
                .done(function (data) {
                    console.debug(data)

                    if (data.results) {
                        var result = data.results[0];
                        $('#address').val(result.address1 + result.address2 + result.address3);
                    } else {
                        $('#address').val('該当する住所が存在しません。');
                    }
                });
        });

        $('#test2').on('click', function () {
            var j = { zip: 'aaaaa' };
            var jsonString = JSON.stringify(j);
            $.ajax({
                url: 'api',
                type: 'POST',
                dataType: 'json',
                data: jsonString,
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }

            })
                .done(function (data) {
                    console.debug(data)

                    if (data.results) {
                        var result = data.results[0];
                        $('#address').val(result.address1 + result.address2 + result.address3);
                    } else {
                        $('#address').val('該当する住所が存在しません。');
                    }
                });
        });

        $('#test3').on('click', function () {
            var json = {
                player1Id: $('#zip').val()
            };
            fetch('api',
                {
                    method: 'POST',
                    body: JSON.stringify(json),
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    return response.json();
                })
                .then(json => {
                    $('#address').val(json.result);
                })
                ;
        });

    </script>

    @if (isCpu) { 
        <script>
            setTimeout(function () {
                var isAiAuto = $('#IsAIAuto').prop("checked")
                if (isAiAuto) {
                    $('#method_com').click();
                }
            }, 1000);

            $('#IsAIAuto').on('click', function () {
                setTimeout(function () {
                    var isAiAuto = $('#IsAIAuto').prop("checked")
                    if (isAiAuto) {
                        $('#method_com').click();
                    }
                }, 2000);
            });
        </script>
    }


}